name: Generate Report

on:
  schedule:
    - cron: "0 12 * * 0"
  workflow_dispatch:

jobs:{% for image in images %}
  {{ image.name | replace(".", "_") }}:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull {{ image.name }}:{{ image.tag }}
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '{{ image.name }}:{{ image.tag }}'
          format: 'json'
          output: '{{ image.name }}.{{ image.tag }}.report.json'
          scanners: 'vuln,secret,config'
      - name: Fetch additional data about the image
        run: curl -L -o {{ image.name  }}.image.json -s 'https://hub.docker.com/v2/repositories/library/{{ image.name }}'
      - name: Fetch additional data about the tag
        run: curl -L -o {{ image.name  }}.{{ image.tag }}.tag.json -s 'https://hub.docker.com/v2/repositories/library/{{ image.name }}/tags/{{ image.tag }}'
      - name: Upload scan report
        uses: actions/upload-artifact@v4
        with:
          name: '{{ image.name }}.{{ image.tag }}.report.json'
          path: '{{ image.name }}.{{ image.tag }}.report.json'
          retention-days: 1
      - name: Upload image data
        uses: actions/upload-artifact@v4
        with:
          name: '{{ image.name  }}.image.json'
          path: '{{ image.name  }}.image.json'
          retention-days: 1
      - name: Upload tag data
        uses: actions/upload-artifact@v4
        with:
          name: '{{ image.name  }}.{{ image.tag }}.tag.json'
          path: '{{ image.name  }}.{{ image.tag }}.tag.json'
          retention-days: 1
{% endfor %}
  collect:
    runs-on: ubuntu-latest
    needs: [{% for image in images %}{{ image.name | replace(".", "_") }}{{ ", " if not loop.last else "" }}{% endfor %}]
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*.report.json'
      - name: Create archive
        run: |
         mkdir files
         mv */*.json files
         rmdir *.json
         mv files/*.json .
         rmdir files
         tar cvzf reports.tar.gz *.json
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'reports.tar.gz'
          path: 'reports.tar.gz'
      - name: Upload to Google Drive
        uses: willo32/google-drive-upload-action@v1
        with:
          target: reports.tar.gz
          name: reports.${{ '{{' }} steps.date.outputs.date }}.tar.gz
          credentials: ${{ '{{' }} secrets.GCP_DRIVE_SERVICE_ACCOUNT }}
          parent_folder_id: ${{ '{{' }} secrets.GOOGLEDRIVE_FOLDER_ID }}
