name: Generate Report

on:
  schedule:
    - cron: "0 12 * * 0"
  workflow_dispatch:

jobs:
  centos:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull centos:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'centos:latest'
          format: 'json'
          output: 'centos.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'centos.latest.report.json'
          path: 'centos.latest.report.json'
          retention-days: 1

  busybox:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull busybox:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'busybox:latest'
          format: 'json'
          output: 'busybox.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'busybox.latest.report.json'
          path: 'busybox.latest.report.json'
          retention-days: 1

  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ubuntu:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ubuntu:latest'
          format: 'json'
          output: 'ubuntu.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ubuntu.latest.report.json'
          path: 'ubuntu.latest.report.json'
          retention-days: 1

  fedora:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull fedora:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'fedora:latest'
          format: 'json'
          output: 'fedora.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'fedora.latest.report.json'
          path: 'fedora.latest.report.json'
          retention-days: 1

  registry:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull registry:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'registry:latest'
          format: 'json'
          output: 'registry.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'registry.latest.report.json'
          path: 'registry.latest.report.json'
          retention-days: 1

  hipache:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull hipache:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hipache:latest'
          format: 'json'
          output: 'hipache.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'hipache.latest.report.json'
          path: 'hipache.latest.report.json'
          retention-days: 1

  docker-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull docker-dev:1
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker-dev:1'
          format: 'json'
          output: 'docker-dev.1.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'docker-dev.1.report.json'
          path: 'docker-dev.1.report.json'
          retention-days: 1

  debian:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull debian:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'debian:latest'
          format: 'json'
          output: 'debian.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'debian.latest.report.json'
          path: 'debian.latest.report.json'
          retention-days: 1

  cirros:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull cirros:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'cirros:latest'
          format: 'json'
          output: 'cirros.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'cirros.latest.report.json'
          path: 'cirros.latest.report.json'
          retention-days: 1

  crux:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull crux:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'crux:latest'
          format: 'json'
          output: 'crux.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'crux.latest.report.json'
          path: 'crux.latest.report.json'
          retention-days: 1

  ubuntu-upstart:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ubuntu-upstart:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ubuntu-upstart:latest'
          format: 'json'
          output: 'ubuntu-upstart.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ubuntu-upstart.latest.report.json'
          path: 'ubuntu-upstart.latest.report.json'
          retention-days: 1

  buildpack-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull buildpack-deps:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'buildpack-deps:latest'
          format: 'json'
          output: 'buildpack-deps.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'buildpack-deps.latest.report.json'
          path: 'buildpack-deps.latest.report.json'
          retention-days: 1

  nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull nginx:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'nginx:latest'
          format: 'json'
          output: 'nginx.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'nginx.latest.report.json'
          path: 'nginx.latest.report.json'
          retention-days: 1

  node:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull node:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'node:latest'
          format: 'json'
          output: 'node.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'node.latest.report.json'
          path: 'node.latest.report.json'
          retention-days: 1

  mysql:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull mysql:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mysql:latest'
          format: 'json'
          output: 'mysql.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'mysql.latest.report.json'
          path: 'mysql.latest.report.json'
          retention-days: 1

  wordpress:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull wordpress:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'wordpress:latest'
          format: 'json'
          output: 'wordpress.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'wordpress.latest.report.json'
          path: 'wordpress.latest.report.json'
          retention-days: 1

  postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull postgres:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'postgres:latest'
          format: 'json'
          output: 'postgres.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'postgres.latest.report.json'
          path: 'postgres.latest.report.json'
          retention-days: 1

  redis:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull redis:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'redis:latest'
          format: 'json'
          output: 'redis.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'redis.latest.report.json'
          path: 'redis.latest.report.json'
          retention-days: 1

  mongo:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull mongo:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mongo:latest'
          format: 'json'
          output: 'mongo.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'mongo.latest.report.json'
          path: 'mongo.latest.report.json'
          retention-days: 1

  rails:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rails:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rails:latest'
          format: 'json'
          output: 'rails.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rails.latest.report.json'
          path: 'rails.latest.report.json'
          retention-days: 1

  ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ruby:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ruby:latest'
          format: 'json'
          output: 'ruby.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ruby.latest.report.json'
          path: 'ruby.latest.report.json'
          retention-days: 1

  python:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull python:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'python:latest'
          format: 'json'
          output: 'python.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'python.latest.report.json'
          path: 'python.latest.report.json'
          retention-days: 1

  ubuntu-debootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ubuntu-debootstrap:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ubuntu-debootstrap:latest'
          format: 'json'
          output: 'ubuntu-debootstrap.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ubuntu-debootstrap.latest.report.json'
          path: 'ubuntu-debootstrap.latest.report.json'
          retention-days: 1

  perl:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull perl:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'perl:latest'
          format: 'json'
          output: 'perl.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'perl.latest.report.json'
          path: 'perl.latest.report.json'
          retention-days: 1

  hello-world:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull hello-world:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hello-world:latest'
          format: 'json'
          output: 'hello-world.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'hello-world.latest.report.json'
          path: 'hello-world.latest.report.json'
          retention-days: 1

  hylang:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull hylang:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hylang:latest'
          format: 'json'
          output: 'hylang.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'hylang.latest.report.json'
          path: 'hylang.latest.report.json'
          retention-days: 1

  gcc:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull gcc:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'gcc:latest'
          format: 'json'
          output: 'gcc.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'gcc.latest.report.json'
          path: 'gcc.latest.report.json'
          retention-days: 1

  jenkins:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull jenkins:2.60.3
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'jenkins:2.60.3'
          format: 'json'
          output: 'jenkins.2.60.3.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'jenkins.2.60.3.report.json'
          path: 'jenkins.2.60.3.report.json'
          retention-days: 1

  golang:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull golang:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'golang:latest'
          format: 'json'
          output: 'golang.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'golang.latest.report.json'
          path: 'golang.latest.report.json'
          retention-days: 1

  neurodebian:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull neurodebian:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'neurodebian:latest'
          format: 'json'
          output: 'neurodebian.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'neurodebian.latest.report.json'
          path: 'neurodebian.latest.report.json'
          retention-days: 1

  clojure:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull clojure:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'clojure:latest'
          format: 'json'
          output: 'clojure.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'clojure.latest.report.json'
          path: 'clojure.latest.report.json'
          retention-days: 1

  php:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull php:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'php:latest'
          format: 'json'
          output: 'php.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'php.latest.report.json'
          path: 'php.latest.report.json'
          retention-days: 1

  jruby:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull jruby:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'jruby:latest'
          format: 'json'
          output: 'jruby.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'jruby.latest.report.json'
          path: 'jruby.latest.report.json'
          retention-days: 1

  mageia:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull mageia:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mageia:latest'
          format: 'json'
          output: 'mageia.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'mageia.latest.report.json'
          path: 'mageia.latest.report.json'
          retention-days: 1

  crate:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull crate:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'crate:latest'
          format: 'json'
          output: 'crate.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'crate.latest.report.json'
          path: 'crate.latest.report.json'
          retention-days: 1

  php-zendserver:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull php-zendserver:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'php-zendserver:latest'
          format: 'json'
          output: 'php-zendserver.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'php-zendserver.latest.report.json'
          path: 'php-zendserver.latest.report.json'
          retention-days: 1

  tomcat:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull tomcat:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'tomcat:latest'
          format: 'json'
          output: 'tomcat.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'tomcat.latest.report.json'
          path: 'tomcat.latest.report.json'
          retention-days: 1

  mono:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull mono:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mono:latest'
          format: 'json'
          output: 'mono.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'mono.latest.report.json'
          path: 'mono.latest.report.json'
          retention-days: 1

  haskell:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull haskell:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'haskell:latest'
          format: 'json'
          output: 'haskell.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'haskell.latest.report.json'
          path: 'haskell.latest.report.json'
          retention-days: 1

  glassfish:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull glassfish:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'glassfish:latest'
          format: 'json'
          output: 'glassfish.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'glassfish.latest.report.json'
          path: 'glassfish.latest.report.json'
          retention-days: 1

  maven:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull maven:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'maven:latest'
          format: 'json'
          output: 'maven.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'maven.latest.report.json'
          path: 'maven.latest.report.json'
          retention-days: 1

  httpd:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull httpd:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'httpd:latest'
          format: 'json'
          output: 'httpd.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'httpd.latest.report.json'
          path: 'httpd.latest.report.json'
          retention-days: 1

  sentry:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull sentry:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'sentry:latest'
          format: 'json'
          output: 'sentry.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'sentry.latest.report.json'
          path: 'sentry.latest.report.json'
          retention-days: 1

  r-base:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull r-base:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'r-base:latest'
          format: 'json'
          output: 'r-base.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'r-base.latest.report.json'
          path: 'r-base.latest.report.json'
          retention-days: 1

  mariadb:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull mariadb:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mariadb:latest'
          format: 'json'
          output: 'mariadb.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'mariadb.latest.report.json'
          path: 'mariadb.latest.report.json'
          retention-days: 1

  thrift:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull thrift:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'thrift:latest'
          format: 'json'
          output: 'thrift.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'thrift.latest.report.json'
          path: 'thrift.latest.report.json'
          retention-days: 1

  pypy:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull pypy:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'pypy:latest'
          format: 'json'
          output: 'pypy.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'pypy.latest.report.json'
          path: 'pypy.latest.report.json'
          retention-days: 1

  django:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull django:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'django:latest'
          format: 'json'
          output: 'django.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'django.latest.report.json'
          path: 'django.latest.report.json'
          retention-days: 1

  haproxy:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull haproxy:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'haproxy:latest'
          format: 'json'
          output: 'haproxy.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'haproxy.latest.report.json'
          path: 'haproxy.latest.report.json'
          retention-days: 1

  memcached:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull memcached:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'memcached:latest'
          format: 'json'
          output: 'memcached.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'memcached.latest.report.json'
          path: 'memcached.latest.report.json'
          retention-days: 1

  rabbitmq:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rabbitmq:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rabbitmq:latest'
          format: 'json'
          output: 'rabbitmq.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rabbitmq.latest.report.json'
          path: 'rabbitmq.latest.report.json'
          retention-days: 1

  oraclelinux:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull oraclelinux:9-slim
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'oraclelinux:9-slim'
          format: 'json'
          output: 'oraclelinux.9-slim.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'oraclelinux.9-slim.report.json'
          path: 'oraclelinux.9-slim.report.json'
          retention-days: 1

  odoo:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull odoo:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'odoo:latest'
          format: 'json'
          output: 'odoo.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'odoo.latest.report.json'
          path: 'odoo.latest.report.json'
          retention-days: 1

  rethinkdb:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rethinkdb:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rethinkdb:latest'
          format: 'json'
          output: 'rethinkdb.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rethinkdb.latest.report.json'
          path: 'rethinkdb.latest.report.json'
          retention-days: 1

  iojs:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull iojs:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'iojs:latest'
          format: 'json'
          output: 'iojs.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'iojs.latest.report.json'
          path: 'iojs.latest.report.json'
          retention-days: 1

  websphere-liberty:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull websphere-liberty:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'websphere-liberty:latest'
          format: 'json'
          output: 'websphere-liberty.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'websphere-liberty.latest.report.json'
          path: 'websphere-liberty.latest.report.json'
          retention-days: 1

  irssi:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull irssi:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'irssi:latest'
          format: 'json'
          output: 'irssi.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'irssi.latest.report.json'
          path: 'irssi.latest.report.json'
          retention-days: 1

  swarm:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull swarm:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'swarm:latest'
          format: 'json'
          output: 'swarm.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'swarm.latest.report.json'
          path: 'swarm.latest.report.json'
          retention-days: 1

  elasticsearch:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull elasticsearch:8.12.0
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'elasticsearch:8.12.0'
          format: 'json'
          output: 'elasticsearch.8.12.0.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'elasticsearch.8.12.0.report.json'
          path: 'elasticsearch.8.12.0.report.json'
          retention-days: 1

  jetty:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull jetty:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'jetty:latest'
          format: 'json'
          output: 'jetty.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'jetty.latest.report.json'
          path: 'jetty.latest.report.json'
          retention-days: 1

  ghost:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ghost:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghost:latest'
          format: 'json'
          output: 'ghost.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ghost.latest.report.json'
          path: 'ghost.latest.report.json'
          retention-days: 1

  celery:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull celery:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'celery:latest'
          format: 'json'
          output: 'celery.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'celery.latest.report.json'
          path: 'celery.latest.report.json'
          retention-days: 1

  percona:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull percona:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'percona:latest'
          format: 'json'
          output: 'percona.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'percona.latest.report.json'
          path: 'percona.latest.report.json'
          retention-days: 1

  aerospike:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull aerospike:ee-7.0.0.3_1
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aerospike:ee-7.0.0.3_1'
          format: 'json'
          output: 'aerospike.ee-7.0.0.3_1.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'aerospike.ee-7.0.0.3_1.report.json'
          path: 'aerospike.ee-7.0.0.3_1.report.json'
          retention-days: 1

  logstash:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull logstash:8.12.0
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'logstash:8.12.0'
          format: 'json'
          output: 'logstash.8.12.0.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'logstash.8.12.0.report.json'
          path: 'logstash.8.12.0.report.json'
          retention-days: 1

  julia:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull julia:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'julia:latest'
          format: 'json'
          output: 'julia.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'julia.latest.report.json'
          path: 'julia.latest.report.json'
          retention-days: 1

  alpine:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull alpine:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'alpine:latest'
          format: 'json'
          output: 'alpine.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'alpine.latest.report.json'
          path: 'alpine.latest.report.json'
          retention-days: 1

  rakudo-star:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rakudo-star:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rakudo-star:latest'
          format: 'json'
          output: 'rakudo-star.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rakudo-star.latest.report.json'
          path: 'rakudo-star.latest.report.json'
          retention-days: 1

  drupal:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull drupal:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'drupal:latest'
          format: 'json'
          output: 'drupal.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'drupal.latest.report.json'
          path: 'drupal.latest.report.json'
          retention-days: 1

  cassandra:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull cassandra:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'cassandra:latest'
          format: 'json'
          output: 'cassandra.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'cassandra.latest.report.json'
          path: 'cassandra.latest.report.json'
          retention-days: 1

  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull sonarqube:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'sonarqube:latest'
          format: 'json'
          output: 'sonarqube.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'sonarqube.latest.report.json'
          path: 'sonarqube.latest.report.json'
          retention-days: 1

  couchbase:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull couchbase:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'couchbase:latest'
          format: 'json'
          output: 'couchbase.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'couchbase.latest.report.json'
          path: 'couchbase.latest.report.json'
          retention-days: 1

  ros:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ros:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ros:latest'
          format: 'json'
          output: 'ros.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ros.latest.report.json'
          path: 'ros.latest.report.json'
          retention-days: 1

  kibana:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull kibana:8.12.0
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'kibana:8.12.0'
          format: 'json'
          output: 'kibana.8.12.0.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'kibana.8.12.0.report.json'
          path: 'kibana.8.12.0.report.json'
          retention-days: 1

  kaazing-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull kaazing-gateway:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'kaazing-gateway:latest'
          format: 'json'
          output: 'kaazing-gateway.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'kaazing-gateway.latest.report.json'
          path: 'kaazing-gateway.latest.report.json'
          retention-days: 1

  arangodb:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull arangodb:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'arangodb:latest'
          format: 'json'
          output: 'arangodb.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'arangodb.latest.report.json'
          path: 'arangodb.latest.report.json'
          retention-days: 1

  owncloud:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull owncloud:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'owncloud:latest'
          format: 'json'
          output: 'owncloud.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'owncloud.latest.report.json'
          path: 'owncloud.latest.report.json'
          retention-days: 1

  gazebo:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull gazebo:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'gazebo:latest'
          format: 'json'
          output: 'gazebo.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'gazebo.latest.report.json'
          path: 'gazebo.latest.report.json'
          retention-days: 1

  joomla:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull joomla:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'joomla:latest'
          format: 'json'
          output: 'joomla.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'joomla.latest.report.json'
          path: 'joomla.latest.report.json'
          retention-days: 1

  redmine:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull redmine:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'redmine:latest'
          format: 'json'
          output: 'redmine.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'redmine.latest.report.json'
          path: 'redmine.latest.report.json'
          retention-days: 1

  nats:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull nats:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'nats:latest'
          format: 'json'
          output: 'nats.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'nats.latest.report.json'
          path: 'nats.latest.report.json'
          retention-days: 1

  rocket_chat:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rocket.chat:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rocket.chat:latest'
          format: 'json'
          output: 'rocket.chat.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rocket.chat.latest.report.json'
          path: 'rocket.chat.latest.report.json'
          retention-days: 1

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull docker:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker:latest'
          format: 'json'
          output: 'docker.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'docker.latest.report.json'
          path: 'docker.latest.report.json'
          retention-days: 1

  tomee:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull tomee:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'tomee:latest'
          format: 'json'
          output: 'tomee.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'tomee.latest.report.json'
          path: 'tomee.latest.report.json'
          retention-days: 1

  sourcemage:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull sourcemage:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'sourcemage:latest'
          format: 'json'
          output: 'sourcemage.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'sourcemage.latest.report.json'
          path: 'sourcemage.latest.report.json'
          retention-days: 1

  bonita:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull bonita:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'bonita:latest'
          format: 'json'
          output: 'bonita.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'bonita.latest.report.json'
          path: 'bonita.latest.report.json'
          retention-days: 1

  solr:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull solr:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'solr:latest'
          format: 'json'
          output: 'solr.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'solr.latest.report.json'
          path: 'solr.latest.report.json'
          retention-days: 1

  neo4j:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull neo4j:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'neo4j:latest'
          format: 'json'
          output: 'neo4j.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'neo4j.latest.report.json'
          path: 'neo4j.latest.report.json'
          retention-days: 1

  erlang:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull erlang:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'erlang:latest'
          format: 'json'
          output: 'erlang.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'erlang.latest.report.json'
          path: 'erlang.latest.report.json'
          retention-days: 1

  nuxeo:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull nuxeo:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'nuxeo:latest'
          format: 'json'
          output: 'nuxeo.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'nuxeo.latest.report.json'
          path: 'nuxeo.latest.report.json'
          retention-days: 1

  photon:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull photon:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'photon:latest'
          format: 'json'
          output: 'photon.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'photon.latest.report.json'
          path: 'photon.latest.report.json'
          retention-days: 1

  couchdb:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull couchdb:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'couchdb:latest'
          format: 'json'
          output: 'couchdb.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'couchdb.latest.report.json'
          path: 'couchdb.latest.report.json'
          retention-days: 1

  notary:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull notary:signer-0.7.0
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'notary:signer-0.7.0'
          format: 'json'
          output: 'notary.signer-0.7.0.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'notary.signer-0.7.0.report.json'
          path: 'notary.signer-0.7.0.report.json'
          retention-days: 1

  piwik:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull piwik:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'piwik:latest'
          format: 'json'
          output: 'piwik.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'piwik.latest.report.json'
          path: 'piwik.latest.report.json'
          retention-days: 1

  elixir:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull elixir:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'elixir:latest'
          format: 'json'
          output: 'elixir.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'elixir.latest.report.json'
          path: 'elixir.latest.report.json'
          retention-days: 1

  lightstreamer:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull lightstreamer:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'lightstreamer:latest'
          format: 'json'
          output: 'lightstreamer.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'lightstreamer.latest.report.json'
          path: 'lightstreamer.latest.report.json'
          retention-days: 1

  orientdb:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull orientdb:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'orientdb:latest'
          format: 'json'
          output: 'orientdb.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'orientdb.latest.report.json'
          path: 'orientdb.latest.report.json'
          retention-days: 1

  mongo-express:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull mongo-express:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mongo-express:latest'
          format: 'json'
          output: 'mongo-express.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'mongo-express.latest.report.json'
          path: 'mongo-express.latest.report.json'
          retention-days: 1

  traefik:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull traefik:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'traefik:latest'
          format: 'json'
          output: 'traefik.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'traefik.latest.report.json'
          path: 'traefik.latest.report.json'
          retention-days: 1

  backdrop:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull backdrop:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'backdrop:latest'
          format: 'json'
          output: 'backdrop.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'backdrop.latest.report.json'
          path: 'backdrop.latest.report.json'
          retention-days: 1

  consul:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull consul:1.15.4
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'consul:1.15.4'
          format: 'json'
          output: 'consul.1.15.4.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'consul.1.15.4.report.json'
          path: 'consul.1.15.4.report.json'
          retention-days: 1

  chronograf:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull chronograf:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'chronograf:latest'
          format: 'json'
          output: 'chronograf.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'chronograf.latest.report.json'
          path: 'chronograf.latest.report.json'
          retention-days: 1

  influxdb:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull influxdb:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'influxdb:latest'
          format: 'json'
          output: 'influxdb.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'influxdb.latest.report.json'
          path: 'influxdb.latest.report.json'
          retention-days: 1

  kapacitor:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull kapacitor:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'kapacitor:latest'
          format: 'json'
          output: 'kapacitor.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'kapacitor.latest.report.json'
          path: 'kapacitor.latest.report.json'
          retention-days: 1

  telegraf:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull telegraf:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'telegraf:latest'
          format: 'json'
          output: 'telegraf.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'telegraf.latest.report.json'
          path: 'telegraf.latest.report.json'
          retention-days: 1

  hello-seattle:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull hello-seattle:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hello-seattle:latest'
          format: 'json'
          output: 'hello-seattle.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'hello-seattle.latest.report.json'
          path: 'hello-seattle.latest.report.json'
          retention-days: 1

  hola-mundo:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull hola-mundo:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hola-mundo:latest'
          format: 'json'
          output: 'hola-mundo.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'hola-mundo.latest.report.json'
          path: 'hola-mundo.latest.report.json'
          retention-days: 1

  fsharp:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull fsharp:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'fsharp:latest'
          format: 'json'
          output: 'fsharp.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'fsharp.latest.report.json'
          path: 'fsharp.latest.report.json'
          retention-days: 1

  spiped:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull spiped:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'spiped:latest'
          format: 'json'
          output: 'spiped.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'spiped.latest.report.json'
          path: 'spiped.latest.report.json'
          retention-days: 1

  vault:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull vault:1.13.3
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vault:1.13.3'
          format: 'json'
          output: 'vault.1.13.3.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'vault.1.13.3.report.json'
          path: 'vault.1.13.3.report.json'
          retention-days: 1

  clearlinux:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull clearlinux:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'clearlinux:latest'
          format: 'json'
          output: 'clearlinux.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'clearlinux.latest.report.json'
          path: 'clearlinux.latest.report.json'
          retention-days: 1

  eggdrop:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull eggdrop:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eggdrop:latest'
          format: 'json'
          output: 'eggdrop.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'eggdrop.latest.report.json'
          path: 'eggdrop.latest.report.json'
          retention-days: 1

  ibmjava:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ibmjava:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ibmjava:latest'
          format: 'json'
          output: 'ibmjava.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ibmjava.latest.report.json'
          path: 'ibmjava.latest.report.json'
          retention-days: 1

  openjdk:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull openjdk:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'openjdk:latest'
          format: 'json'
          output: 'openjdk.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'openjdk.latest.report.json'
          path: 'openjdk.latest.report.json'
          retention-days: 1

  kong:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull kong:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'kong:latest'
          format: 'json'
          output: 'kong.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'kong.latest.report.json'
          path: 'kong.latest.report.json'
          retention-days: 1

  zookeeper:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull zookeeper:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'zookeeper:latest'
          format: 'json'
          output: 'zookeeper.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'zookeeper.latest.report.json'
          path: 'zookeeper.latest.report.json'
          retention-days: 1

  nats-streaming:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull nats-streaming:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'nats-streaming:latest'
          format: 'json'
          output: 'nats-streaming.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'nats-streaming.latest.report.json'
          path: 'nats-streaming.latest.report.json'
          retention-days: 1

  storm:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull storm:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'storm:latest'
          format: 'json'
          output: 'storm.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'storm.latest.report.json'
          path: 'storm.latest.report.json'
          retention-days: 1

  plone:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull plone:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'plone:latest'
          format: 'json'
          output: 'plone.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'plone.latest.report.json'
          path: 'plone.latest.report.json'
          retention-days: 1

  bash:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull bash:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'bash:latest'
          format: 'json'
          output: 'bash.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'bash.latest.report.json'
          path: 'bash.latest.report.json'
          retention-days: 1

  amazonlinux:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull amazonlinux:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'amazonlinux:latest'
          format: 'json'
          output: 'amazonlinux.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'amazonlinux.latest.report.json'
          path: 'amazonlinux.latest.report.json'
          retention-days: 1

  composer:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull composer:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'composer:latest'
          format: 'json'
          output: 'composer.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'composer.latest.report.json'
          path: 'composer.latest.report.json'
          retention-days: 1

  known:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull known:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'known:latest'
          format: 'json'
          output: 'known.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'known.latest.report.json'
          path: 'known.latest.report.json'
          retention-days: 1

  eclipse-mosquitto:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull eclipse-mosquitto:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eclipse-mosquitto:latest'
          format: 'json'
          output: 'eclipse-mosquitto.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'eclipse-mosquitto.latest.report.json'
          path: 'eclipse-mosquitto.latest.report.json'
          retention-days: 1

  nextcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull nextcloud:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'nextcloud:latest'
          format: 'json'
          output: 'nextcloud.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'nextcloud.latest.report.json'
          path: 'nextcloud.latest.report.json'
          retention-days: 1

  silverpeas:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull silverpeas:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'silverpeas:latest'
          format: 'json'
          output: 'silverpeas.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'silverpeas.latest.report.json'
          path: 'silverpeas.latest.report.json'
          retention-days: 1

  swift:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull swift:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'swift:latest'
          format: 'json'
          output: 'swift.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'swift.latest.report.json'
          path: 'swift.latest.report.json'
          retention-days: 1

  haxe:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull haxe:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'haxe:latest'
          format: 'json'
          output: 'haxe.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'haxe.latest.report.json'
          path: 'haxe.latest.report.json'
          retention-days: 1

  rapidoid:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rapidoid:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rapidoid:latest'
          format: 'json'
          output: 'rapidoid.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rapidoid.latest.report.json'
          path: 'rapidoid.latest.report.json'
          retention-days: 1

  adminer:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull adminer:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'adminer:latest'
          format: 'json'
          output: 'adminer.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'adminer.latest.report.json'
          path: 'adminer.latest.report.json'
          retention-days: 1

  geonetwork:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull geonetwork:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'geonetwork:latest'
          format: 'json'
          output: 'geonetwork.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'geonetwork.latest.report.json'
          path: 'geonetwork.latest.report.json'
          retention-days: 1

  xwiki:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull xwiki:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'xwiki:latest'
          format: 'json'
          output: 'xwiki.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'xwiki.latest.report.json'
          path: 'xwiki.latest.report.json'
          retention-days: 1

  groovy:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull groovy:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'groovy:latest'
          format: 'json'
          output: 'groovy.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'groovy.latest.report.json'
          path: 'groovy.latest.report.json'
          retention-days: 1

  znc:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull znc:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'znc:latest'
          format: 'json'
          output: 'znc.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'znc.latest.report.json'
          path: 'znc.latest.report.json'
          retention-days: 1

  gradle:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull gradle:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'gradle:latest'
          format: 'json'
          output: 'gradle.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'gradle.latest.report.json'
          path: 'gradle.latest.report.json'
          retention-days: 1

  convertigo:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull convertigo:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'convertigo:latest'
          format: 'json'
          output: 'convertigo.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'convertigo.latest.report.json'
          path: 'convertigo.latest.report.json'
          retention-days: 1

  flink:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull flink:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'flink:latest'
          format: 'json'
          output: 'flink.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'flink.latest.report.json'
          path: 'flink.latest.report.json'
          retention-days: 1

  swipl:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull swipl:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'swipl:latest'
          format: 'json'
          output: 'swipl.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'swipl.latest.report.json'
          path: 'swipl.latest.report.json'
          retention-days: 1

  rust:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rust:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rust:latest'
          format: 'json'
          output: 'rust.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rust.latest.report.json'
          path: 'rust.latest.report.json'
          retention-days: 1

  mediawiki:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull mediawiki:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'mediawiki:latest'
          format: 'json'
          output: 'mediawiki.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'mediawiki.latest.report.json'
          path: 'mediawiki.latest.report.json'
          retention-days: 1

  euleros:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull euleros:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'euleros:latest'
          format: 'json'
          output: 'euleros.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'euleros.latest.report.json'
          path: 'euleros.latest.report.json'
          retention-days: 1

  sl:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull sl:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'sl:latest'
          format: 'json'
          output: 'sl.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'sl.latest.report.json'
          path: 'sl.latest.report.json'
          retention-days: 1

  open-liberty:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull open-liberty:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'open-liberty:latest'
          format: 'json'
          output: 'open-liberty.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'open-liberty.latest.report.json'
          path: 'open-liberty.latest.report.json'
          retention-days: 1

  teamspeak:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull teamspeak:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'teamspeak:latest'
          format: 'json'
          output: 'teamspeak.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'teamspeak.latest.report.json'
          path: 'teamspeak.latest.report.json'
          retention-days: 1

  matomo:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull matomo:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'matomo:latest'
          format: 'json'
          output: 'matomo.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'matomo.latest.report.json'
          path: 'matomo.latest.report.json'
          retention-days: 1

  yourls:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull yourls:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'yourls:latest'
          format: 'json'
          output: 'yourls.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'yourls.latest.report.json'
          path: 'yourls.latest.report.json'
          retention-days: 1

  alt:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull alt:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'alt:latest'
          format: 'json'
          output: 'alt.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'alt.latest.report.json'
          path: 'alt.latest.report.json'
          retention-days: 1

  amazoncorretto:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull amazoncorretto:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'amazoncorretto:latest'
          format: 'json'
          output: 'amazoncorretto.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'amazoncorretto.latest.report.json'
          path: 'amazoncorretto.latest.report.json'
          retention-days: 1

  express-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull express-gateway:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'express-gateway:latest'
          format: 'json'
          output: 'express-gateway.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'express-gateway.latest.report.json'
          path: 'express-gateway.latest.report.json'
          retention-days: 1

  postfixadmin:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull postfixadmin:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'postfixadmin:latest'
          format: 'json'
          output: 'postfixadmin.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'postfixadmin.latest.report.json'
          path: 'postfixadmin.latest.report.json'
          retention-days: 1

  fluentd:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull fluentd:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'fluentd:latest'
          format: 'json'
          output: 'fluentd.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'fluentd.latest.report.json'
          path: 'fluentd.latest.report.json'
          retention-days: 1

  adoptopenjdk:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull adoptopenjdk:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'adoptopenjdk:latest'
          format: 'json'
          output: 'adoptopenjdk.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'adoptopenjdk.latest.report.json'
          path: 'adoptopenjdk.latest.report.json'
          retention-days: 1

  sapmachine:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull sapmachine:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'sapmachine:latest'
          format: 'json'
          output: 'sapmachine.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'sapmachine.latest.report.json'
          path: 'sapmachine.latest.report.json'
          retention-days: 1

  varnish:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull varnish:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'varnish:latest'
          format: 'json'
          output: 'varnish.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'varnish.latest.report.json'
          path: 'varnish.latest.report.json'
          retention-days: 1

  jobber:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull jobber:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'jobber:latest'
          format: 'json'
          output: 'jobber.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'jobber.latest.report.json'
          path: 'jobber.latest.report.json'
          retention-days: 1

  archlinux:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull archlinux:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'archlinux:latest'
          format: 'json'
          output: 'archlinux.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'archlinux.latest.report.json'
          path: 'archlinux.latest.report.json'
          retention-days: 1

  friendica:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull friendica:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'friendica:latest'
          format: 'json'
          output: 'friendica.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'friendica.latest.report.json'
          path: 'friendica.latest.report.json'
          retention-days: 1

  caddy:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull caddy:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'caddy:latest'
          format: 'json'
          output: 'caddy.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'caddy.latest.report.json'
          path: 'caddy.latest.report.json'
          retention-days: 1

  monica:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull monica:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'monica:latest'
          format: 'json'
          output: 'monica.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'monica.latest.report.json'
          path: 'monica.latest.report.json'
          retention-days: 1

  phpmyadmin:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull phpmyadmin:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'phpmyadmin:latest'
          format: 'json'
          output: 'phpmyadmin.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'phpmyadmin.latest.report.json'
          path: 'phpmyadmin.latest.report.json'
          retention-days: 1

  hitch:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull hitch:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hitch:latest'
          format: 'json'
          output: 'hitch.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'hitch.latest.report.json'
          path: 'hitch.latest.report.json'
          retention-days: 1

  almalinux:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull almalinux:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'almalinux:latest'
          format: 'json'
          output: 'almalinux.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'almalinux.latest.report.json'
          path: 'almalinux.latest.report.json'
          retention-days: 1

  dart:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull dart:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'dart:latest'
          format: 'json'
          output: 'dart.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'dart.latest.report.json'
          path: 'dart.latest.report.json'
          retention-days: 1

  eclipse-temurin:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull eclipse-temurin:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'eclipse-temurin:latest'
          format: 'json'
          output: 'eclipse-temurin.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'eclipse-temurin.latest.report.json'
          path: 'eclipse-temurin.latest.report.json'
          retention-days: 1

  ibm-semeru-runtimes:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull ibm-semeru-runtimes:open-8u392-b08-jre-jammy
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ibm-semeru-runtimes:open-8u392-b08-jre-jammy'
          format: 'json'
          output: 'ibm-semeru-runtimes.open-8u392-b08-jre-jammy.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'ibm-semeru-runtimes.open-8u392-b08-jre-jammy.report.json'
          path: 'ibm-semeru-runtimes.open-8u392-b08-jre-jammy.report.json'
          retention-days: 1

  rockylinux:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull rockylinux:9.3.20231119-minimal
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'rockylinux:9.3.20231119-minimal'
          format: 'json'
          output: 'rockylinux.9.3.20231119-minimal.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'rockylinux.9.3.20231119-minimal.report.json'
          path: 'rockylinux.9.3.20231119-minimal.report.json'
          retention-days: 1

  api-firewall:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull api-firewall:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'api-firewall:latest'
          format: 'json'
          output: 'api-firewall.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'api-firewall.latest.report.json'
          path: 'api-firewall.latest.report.json'
          retention-days: 1

  emqx:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull emqx:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'emqx:latest'
          format: 'json'
          output: 'emqx.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'emqx.latest.report.json'
          path: 'emqx.latest.report.json'
          retention-days: 1

  satosa:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull satosa:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'satosa:latest'
          format: 'json'
          output: 'satosa.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'satosa.latest.report.json'
          path: 'satosa.latest.report.json'
          retention-days: 1

  unit:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull unit:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'unit:latest'
          format: 'json'
          output: 'unit.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'unit.latest.report.json'
          path: 'unit.latest.report.json'
          retention-days: 1

  spark:
    runs-on: ubuntu-latest
    steps:
      - name: Pull image
        run: docker pull spark:latest
      - name: Create report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'spark:latest'
          format: 'json'
          output: 'spark.latest.report.json'
          scanners: 'vuln,secret,config'
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: 'spark.latest.report.json'
          path: 'spark.latest.report.json'
          retention-days: 1

  collect:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*.report.json'
      - name: Create archive
        run: tar cvzf reports.tar.gz *.report.json
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'reports.tar.gz'
          path: 'reports.tar.gz'
